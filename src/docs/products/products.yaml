paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos divididos en paginas
      security:
      - BearerAuth: []
      tags:
        - Products
      responses:
        "200":
          description: Los productos fueron obtenidos satisfactoriamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor...
  /api/products/get:
    get:
      summary: Obtiene todos los productos
      security:
      - BearerAuth: []
      tags:
        - Products
      responses:
        "200":
          description: Los productos fueron obtenidos satisfactoriamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor...
  /api/products/{uid}: 
    get:
      summary: Obtiene un producto por su id
      security:
      - BearerAuth: []
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          description: Id del producto a obtener
          required: true
          schema:
            type: string
      responses:
        "200":
          description: El producto fue obtenido satisfactoriamente de la base de datos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "404":
          description: El producto no fue encontrado en la base de datos
        "500":
          description: Error interno del servidor...
    put:
      summary: Actualiza un producto por su id
      security:
      - BearerAuth: []
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          description: Id del producto a actualizar
          required: true
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: El producto fue actualizado satisfactoriamente en la base de datos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "404":
          description: El producto no fue encontrado en la base de datos
        "500":
          description: Error interno del servidor...
    delete:
      summary: Elimina un producto por su id
      security:
      - BearerAuth: []
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          description: Id del producto a eliminar
          required: true
          schema:
            $type: string
      responses:
        "200":
          description: El producto fue eliminado satisfactoriamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor...
  /api/products/createOne:
    put:
      summary: Crea un producto con los datos brindados
      security:
      - BearerAuth: []
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "200":
          description: El producto fue creado satisfactoriamente en la base de datos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor...
  /api/products/createMany:
    put:
      summary: Crea varios productos con los datos brindados
      security:
      - BearerAuth: []
      tags:
          - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "200":
          description: Los productos fueron creados satisfactoriamente en la base de datos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor...
components:
  schemas:
    Product: 
      type: object
      properties:
        _id: 
          type: ObjectId
          description: Id autogenerado de MongoDB
        title: 
          type: String
          description: Titulo del producto
        owner:
          type: String
          description: Dueño/creador del producto
        description:
          type: String
          description: Descripcion del producto
        code:
          type: String
          description: Codigo del producto
        price:
          type: Number
          description: Precio del producto
        status:
          type: Boolean
          description: Estado actual del producto
        stock:
          type: Number
          description: Stock disponible del producto
        category:
          type: String
          description: Categoria del producto
        thumbnail:
          type: Array
          description: Fotos del producto
      example: 
        _id: ObjectId("647fa8c9e46dbc5a20320181")
        title: Producto de prueba 1
        owner: correodeprueba1@gmail.com
        description: Esto es una descripcion de prueba
        code: "005"
        price: 100
        status: true
        stock: 20
        category: Categoria del producto
        thumbnail: [
          imagen.jpg,
          imagen2.jpg
        ]
  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:  
          type: ObjectId
          description: Id autogenerado de MongoDB
        title: 
          type: String
          description: Titulo del producto
        owner:
          type: String
          description: Dueño/creador del producto
        description:
          type: String
          description: Descripcion del producto
        code:
          type: String
          description: Codigo del producto
        price:
          type: Number
          description: Precio del producto
        status:
          type: Boolean
          description: Estado actual del producto
        stock:
          type: Number
          description: Stock disponible del producto
        category:
          type: String
          description: Categoria del producto
        thumbnail:
          type: Array
          description: Fotos del producto
      example: 
        _id: ObjectId("647fa8c9e46dbc5a20320181")
        title: Producto de prueba 1
        owner: correodeprueba1@gmail.com
        description: Esto es una descripcion de prueba
        code: "005"
        price: 100
        status: true
        stock: 20
        category: Categoria del producto
        thumbnail: [
          imagen.jpg,
          imagen2.jpg
        ]
    createProduct:
      type: object
      properties:
        _id:  
          type: ObjectId
          description: Id autogenerado de MongoDB
        title: 
          type: String
          description: Titulo del producto
        owner:
          type: String
          description: Dueño/creador del producto
        description:
          type: String
          description: Descripcion del producto
        code:
          type: String
          description: Codigo del producto
        price:
          type: Number
          description: Precio del producto
        status:
          type: Boolean
          description: Estado actual del producto
        stock:
          type: Number
          description: Stock disponible del producto
        category:
          type: String
          description: Categoria del producto
        thumbnail:
          type: Array
          description: Fotos del producto
      example: 
        _id: ObjectId("647fa8c9e46dbc5a20320181")
        title: Producto de prueba 1
        owner: correodeprueba1@gmail.com
        description: Esto es una descripcion de prueba
        code: "005"
        price: 100
        status: true
        stock: 20
        category: Categoria del producto
        thumbnail: [
          imagen.jpg,
          imagen2.jpg
        ]
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
